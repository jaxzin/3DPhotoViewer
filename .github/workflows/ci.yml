name: CI

on:
  push:
    branches: [master, main]
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run tests
        run: npm test
      - name: Package extension
        run: npx grunt --gruntfile Gruntfile.cjs package
      - name: Upload packaged extension
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension
          path: dist/*.zip

  tag_release:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Bump patch version and tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          npm version patch -m "chore: release %s [skip ci]"
          git push --follow-tags

  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Approve release
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ github.repository_owner }}
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Bump patch version and tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          npm version patch -m "chore: release %s [skip ci]"
          git push --follow-tags

  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          npm version "$VERSION" --no-git-tag-version
      - name: Package extension
        run: npx grunt --gruntfile Gruntfile.cjs package
      - name: Publish to Chrome Web Store
        env:
          EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
        run: |
          npx chrome-webstore-upload-cli upload \
            --source dist/3DPhotoViewer-$(node -p "require('./package.json').version").zip \
            --extension-id "$EXTENSION_ID" \
            --client-id "$CLIENT_ID" \
            --client-secret "$CLIENT_SECRET" \
            --refresh-token "$REFRESH_TOKEN"
